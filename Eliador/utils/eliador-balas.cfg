#textdomain wesnoth-Eliador
next_scenario=null
name= _ "Balas"
victory_when_enemies_defeated=no
map_data="{@campaigns/Eliador/maps/eliador-balas.map}"

turns=40

[music]
    name=loyalists.ogg
    append=yes
[/music]

[side]
    side=1
    team_name=good
    controller=human
    no_leader=yes
[/side]

[side]
    side=2
    team_name=good
    controller=ai
    no_leader=yes
    colour=red
[/side]

[side]
    side=3
    team_name=bad
    controller=ai
    no_leader=yes
    colour=black
    [ai]
        caution=0.0
        aggression=1.0
        simple_targetting=yes
    [/ai]
[/side]

[side]
    side=4
    team_name=bad
    controller=null
    no_leader=yes
    colour=red
[/side]

[side]
    side=5
    team_name=good
    controller=null
    no_leader=yes
    colour=red
[/side]

#define CREATE_PRISONER TYPE DESC UDESC X Y HP
    [unit]
        type={TYPE}
        description={DESC}
        user_description={UDESC}
        side=4
        x={X}
        y={Y}
        overlays=items/cage.png
        hitpoints={HP}
    [/unit]
#enddef

[event]
    name=prestart
    [objectives]
        note=_"The fencers will leave after all elves have
been killed or captured"
        [objective]
            description= _ "Kill all enemies"
            condition=win
        [/objective]
        [objective]
            description= _ "Death of Ardella"
            condition=lose
        [/objective]
        [objective]
            description= _ "Death of Anna"
            condition=lose
        [/objective]
        [objective]
            description= _ "Death of Zeke"
            condition=lose
        [/objective]
        [objective]
            description= _ "Turns run out"
            condition=lose
        [/objective]
    [/objectives]

    #Unlock Dol Kelroth if Sinon played
    [if]
        [variable]
            name=scenario_locs[0].played
            equals=yes
        [/variable]
        [then]
            {VARIABLE scenario_locs[5].playable yes}
        [/then]
    [/if]

    #Unlock Varad if Illien played
    [if]
        [variable]
            name=scenario_locs[3].played
            equals=yes
        [/variable]
        [then]
            {VARIABLE scenario_locs[8].playable yes}
        [/then]
    [/if]

    {UNSTORE_AT ardella_store 1 18 38}
    {UNSTORE_AT anna_store 1 18 39}
    {UNSTORE_AT zeke_store 1 19 39}

    {VARIABLE n $glorienda_store.length}

    #Unstore elves from Glorienda
    [if]
        [variable]
            name=n
            greater_than=0
        [/variable]
        [then]
            {UNSTORE_AT glorienda_store 1 (3-16) 40}
        [/then]
        [else]
            #Create one elf if you don't have any
            [unit]
                gender=female
                side=1
                x,y=10,40
                type=Elvish Archer
                description=Eledril
                user_description= _ "Eledril"
            [/unit]
        [/else]
    [/if]

    #Set old_owner variable for monsters
    {FOREACH anwar_store i}
    {VARIABLE_OP var format anwar_store[$i].variables.old_owner}
    {VARIABLE_OP owner to_variable anwar_store[$i].variables.owner}
    {VARIABLE $var $owner}
    {NEXT i}
    {UNSTORE_AT anwar_store 2 (18-20) 40}

    #Create Bill and Duelists
    {UNIT_LEADER (Master at Arms) Bill ( _ "Bill") 3 7 11}
    {UNIT_FILL Duelist 3 21 3-5}

    #Normal or Hard: one more duelist
#ifdef EASY
#else
    {UNIT_NAMELESS Duelist 3 22 4}
#endif

    #Create Fencers (note: these fencers don't advance)
    {UNIT_FILL (Bill Fencer) 3 (4-10) (12-16)}

    #Galleons at NE
    {PLACE_IMAGE units/transport/pirate-galleon.png 11 9}
    {PLACE_IMAGE units/transport/pirate-galleon.png 20 4}
    {PLACE_IMAGE units/transport/pirate-galleon.png 33 22}

    #Create prisoners
    {CREATE_PRISONER (Grand Marshal) Saenvan ( _ "Saenvan") 25 5 40}
    {CREATE_PRISONER General Caryn ( _ "Caryn") 25 6 45}
    {CREATE_PRISONER Sergeant Gleran ( _ "Gleran") 25 4 30}
    {CREATE_PRISONER Sergeant Aethunry ( _ "Aethunry") 24 4 35}
    {CREATE_PRISONER Sergeant Owidry ( _ "Owidry") 24 5 40}
    {CREATE_PRISONER Sergeant Lurraent ( _ "Lurraent") 26 4 40}
    {CREATE_PRISONER Sergeant Yranvan ( _ "Yranvan") 26 5 30}

    {VARIABLE grabbed_elf no}
    {VARIABLE captured_type none}

    {CLEAR_VARIABLE store}
    {CLEAR_VARIABLE ardella_store}
    {CLEAR_VARIABLE anna_store}
    {CLEAR_VARIABLE zeke_store}
    {CLEAR_VARIABLE anwar_store}
    {CLEAR_VARIABLE glorienda_store}
[/event]

#define MOVE_GALLEON FROM_X FROM_Y TO_X TO_Y
    [scroll_to]
        x={FROM_X}
        y={FROM_Y}
    [/scroll_to]
    [delay]
        time=500
    [/delay]
    [removeitem]
        x={FROM_X}
        y={FROM_Y}
    [/removeitem]
    {VARIABLE xa ({FROM_X})}
    {VARIABLE xb ({TO_X})}
    {VARIABLE ya ({FROM_Y})}
    {VARIABLE yb ({TO_Y})}
    {VARIABLE_OP movex format $xa|,$xb}
    {VARIABLE_OP movey format $ya|,$yb}
    [move_unit_fake]
        type=Pirate Galleon
        x=$movex
        y=$movey
    [/move_unit_fake]
    {PLACE_IMAGE units/transport/pirate-galleon.png ({TO_X}) ({TO_Y})}
    [redraw] [/redraw]
    [delay]
        time=500
    [/delay]
    {CLEAR_VARIABLE xa}
    {CLEAR_VARIABLE xb}
    {CLEAR_VARIABLE ya}
    {CLEAR_VARIABLE yb}
    {CLEAR_VARIABLE movex}
    {CLEAR_VARIABLE movey}
#enddef

[event]
    name=start
    {UNIT_MSG (description=Zeke) ( _ "Momma, that's the bad man who took papa!")}
    {UNIT_MSG (description=Ardella) ( _ "Bill!")}
    {UNIT_MSG (description=Bill) ( _ "Ardella has arrived. You know what to do.")}
    {MOVE_UNIT (description=Bill) 11 9}
    [kill]
        description=Bill
    [/kill]
    {MOVE_GALLEON 11 9 26 20}

    {UNIT_MSG (description=Ardella) ( _ "Wait here.")}

    #Move Ardella above elves
    {MOVE_UNIT (description=Ardella) 8 37}

    #Store 3 locations below and adjacent to Ardella
    [store_locations]
        variable=locs
        x,y=7-9,38
    [/store_locations]

    #Move Ardella's monsters to those locations
    {STORE_UNITS anwar_store (side=2) no}
    {FOREACH anwar_store i}
    {VARIABLE_OP owner to_variable anwar_store[$i].variables.owner}
    {VARIABLE_OP desc to_variable anwar_store[$i].description}
    {VARIABLE_OP x to_variable locs[$i].x}
    {VARIABLE_OP y to_variable locs[$i].y}
    [if]
        [variable]
            name=owner
            equals=Ardella
        [/variable]
        [then]
            {MOVE_UNIT (description=$desc) $x $y}
        [/then]
    [/if]
    {NEXT i}

    {LOYAL_UNIT 4 (Sea Serpent) 17 30 Balthor ( _ "Balthor")}
    [scroll_to_unit]
        description=Balthor
    [/scroll_to_unit]
    [delay]
        time=1000
    [/delay]
    [kill]
        x,y=17,30
    [/kill]
    {UNIT_MSG (description=Anna) ( _ "Did you see that? There's something in the bay.")}
    {UNIT_MSG (description=Zeke) ( _ "Let's check it out.")}

    {CLEAR_VARIABLE anwar_store}
    {CLEAR_VARIABLE owner}
    {CLEAR_VARIABLE desc}
    {CLEAR_VARIABLE locs}
[/event]

#define SHOW_BRELLA
    #Kids should be on Balthor by now, but check anyway
    [if]
        [have_unit]
            description=Balthor
        [/have_unit]
        [not]
            [have_unit]
                description=Brella
            [/have_unit]
        [/not]
        [then]
            {UNIT_MSG (description=Ardella) ( _ "Anna! Zeke!")}
            {LOYAL_UNIT 4 (Sea Serpent) 17 30 Brella ( _ "Brella")}
            [scroll_to_unit]
                description=Brella
            [/scroll_to_unit]
            [delay]
                time=1000
            [/delay]
            [kill]
                description=Brella
            [/kill]

            #Ardella moves to bay: she gets on Brella
            [event]
                name=moveto
                first_time_only=yes
                [filter]
                    description=Ardella
                    x,y=18,32
                [/filter]
                {LOYAL_UNIT 1 (Sea Serpent) 18 31 Brella ( _ "Brella")}
                {UNIT_MSG (description=Brella) ( _ "Hop on. I'll take you to your children.")}

                {STORE_UNITS brella_store (description=Brella) yes}
                {STORE_UNITS ardella_store (description=Ardella) yes}
                {UNIT_LEADER (Queen Sea Serpent) Brella ( _ "Brella") 1 18 31}
                [redraw] [/redraw]
                #Brella can't move in shallow water (SE isle)
                {MODIFY_UNIT (description=Brella) movement_costs.shallow_water 20}

                #Set terrain to deep water
                [terrain]
                    x,y=18,32
                    letter=Wo
                [/terrain]

                #Ardella's monsters follow Brella
                {STORE_UNITS anwar_store (side=2) yes}
                {FOREACH anwar_store i}
                {VARIABLE_OP var format anwar_store[$i].variables.owner}
                [if]
                    [variable]
                        name=$var
                        equals=Ardella
                    [/variable]
                    [then]
                        {VARIABLE $var Brella}
                    [/then]
                [/if]
                {VARIABLE_OP var format anwar_store[$i]}
                [unstore_unit]
                    variable=$var
                [/unstore_unit]
                {NEXT i}

                {CLEAR_VARIABLE anwar_store}
            [/event]
        [/then]
    [/if]
#enddef

#Kids get on Balthor when they are both in water
[event]
    name=moveto
    first_time_only=no
    [filter]
        type=Outlaw Kid
        x=17-18
        y=32
    [/filter]

    #If both kids in water, Balthor appears
    [if]
        [have_location]
            x,y=17,32
            [filter]
                type=Outlaw Kid
            [/filter]
        [/have_location]
        [have_location]
            x,y=18,32
            [filter]
                type=Outlaw Kid
            [/filter]
        [/have_location]
        [then]
            {LOYAL_UNIT 1 (Sea Serpent) 18 31 Balthor ( _ "Balthor")}
            {UNIT_MSG (description=Zeke) ( _ "Wow, a sea serpent!")}
            {UNIT_MSG (description=Balthor) ( _ "What are human children doing in my water?")}
            {UNIT_MSG (description=Anna) ( _ "We our looking for our father...")}
            {UNIT_MSG (description=Zeke) ( _ "He was taken by the man in that galleon.")}
            {UNIT_MSG (description=Balthor) ( _ "There are captives on a nearby isle. Perhaps your father is among them.")}
            {UNIT_MSG (description=Zeke) ( _ "Will you please take us there?")}
            {UNIT_MSG (description=Balthor) ( _ "Hop on.")}

            {STORE_UNITS balthor_store (description=Balthor) yes}
            {STORE_UNITS zeke_store (description=Zeke) yes}
            {STORE_UNITS anna_store (description=Anna) yes}
            {UNIT_LEADER (Kids Sea Serpent) Balthor ( _ "Balthor") 1 18 31}
            [redraw] [/redraw]
            #Balthor can't move in shallow water (SE isle)
            {MODIFY_UNIT (description=Balthor) movement_costs.shallow_water 20}

            {UNIT_MSG (description=Balthor) ( _ "Hold on tight!")}

            #Set terrain to deep water (so kids can't move here again)
            [terrain]
                x,y=17,32
                letter=Wo
            [/terrain]

            #Kids' monsters follow Balthor
            {STORE_UNITS anwar_store (side=2) yes}
            {FOREACH anwar_store i}
            {VARIABLE_OP var format anwar_store[$i].variables.owner}
            [if]
                [variable]
                    name=$var
                    not_equals=Ardella
                [/variable]
                [then]
                    {VARIABLE $var Balthor}
                [/then]
            [/if]
            {VARIABLE_OP var format anwar_store[$i]}
            [unstore_unit]
                variable=$var
            [/unstore_unit]
            {NEXT i}

            {CLEAR_VARIABLE anwar_store}
        [/then]
    [/if]

    {CLEAR_VARIABLE locs}
[/event]

#define GET_OFF_SERPENTS X Y
    #Kids get off Balthor
    {MODIFY_UNIT (description=Balthor) type (Sea Serpent)}
    {MODIFY_UNIT (description=Brella) type (Sea Serpent)}
    {UNSTORE_AT anna_store 1 ({X}) ({Y})}
    {UNSTORE_AT zeke_store 1 ({X}) ({Y})}
    {UNSTORE_AT ardella_store 1 ({X}) ({Y})}

    #Monsters get their old owners back
    {STORE_UNITS anwar_store (side=2) yes}
    {FOREACH anwar_store i}
    {VARIABLE_OP var format anwar_store[$i].variables.owner}
    {VARIABLE_OP owner to_variable anwar_store[$i].variables.old_owner}
    {VARIABLE $var $owner}
    {VARIABLE_OP var format anwar_store[$i]}
    [unstore_unit]
        variable=$var
    [/unstore_unit]
    {NEXT i}

    #Balthor and Brella go east
    {MOVE_UNIT (description=Balthor) 40 12}
    [kill]
        description=Balthor
    [/kill]
    {MOVE_UNIT (description=Brella) 40 13}
    [kill]
        description=Brella
    [/kill]
#enddef

#define FREE_PRISONER X Y

    [remove_unit_overlay]
        x={X}
        y={Y}
        image=items/cage.png
    [/remove_unit_overlay]

    [store_unit]
        variable=store
        kill=yes
        [filter]
            x={X}
            y={Y}
        [/filter]
    [/store_unit]
    {VARIABLE store.side 1}
    [unstore_unit]
        variable=store
    [/unstore_unit]

    {CLEAR_VARIABLE store}
#enddef

#When guards defeated, NE prisoners take galleon to shore
[event]
    name=die
    first_time_only=no
    [filter]
        side=3
        x=21-28
        y=2-7
    [/filter]

    {VARIABLE DEBUG_KILLED_ALL_GUARDS no}

    [if]
        [have_unit]
            side=3
            x=21-28
            y=2-7
        [/have_unit]
        [else]
            #Bug fix: fencer was unstored with <0 hp
            [kill]
                x=$x1
                y=$y1
            [/kill]

            {VARIABLE DEBUG_KILLED_ALL_GUARDS yes}

            #Free NE isle prisoners
            [store_locations]
                variable=locs
                x=21-28
                y=2-7
                [filter]
                    side=5
                [/filter]
            [/store_locations]

            {VARIABLE DEBUG_PRISONER_SIDE_5 $locs.length}
            {VARIABLE n $locs.length}

            #Bug Fix: Duelists can be killed when attacking
            [if]
                [variable]
                    name=n
                    greater_than=0
                [/variable]
                [else]
                    [store_locations]
                        variable=locs
                        x=21-28
                        y=2-7
                        [filter]
                            side=4
                        [/filter]
                    [/store_locations]
                    {VARIABLE DEBUG_PRISONER_SIDE_4 $locs.length}
                [/else]
            [/if]
            {FOREACH locs i}
            {VARIABLE_OP x to_variable locs[$i].x}
            {VARIABLE_OP y to_variable locs[$i].y}
            {FREE_PRISONER $x $y}
            {NEXT i}

            [redraw] [/redraw]
            #Move Balthor and Brella in case either is far from isle
            {MOVE_UNIT (description=Balthor) 22 7}
            {MOVE_UNIT (description=Brella) 23 8}

            {UNIT_MSG (description=Saenvan) ( _ "Thank you...")}
            {UNIT_MSG (description=Balthor) ( _ "These children are looking for their father. His name is Zilead. Have you seen him?")}
            {UNIT_MSG (description=Saenvan) ( _ "Zilead was taken southward... towards Varad.")}
            {UNIT_MSG (description=Balthor) ( _ "Can you take them there? I must help the sea creatures of Eliador battle the incoming galleons.")}
            {UNIT_MSG (description=Saenvan) ( _ "Of course. Good luck, Balthor!")}

            {GET_OFF_SERPENTS 24 5}

            [redraw] [/redraw]
            #Store the prisoners and Anna and Zeke
            [store_unit]
                variable=store
                kill=yes
                [filter]
                    x=19-29
                    y=1-8
                    side=1
                [/filter]
            [/store_unit]

            [redraw] [/redraw]
            #They all take galleon to mainland
            {MOVE_GALLEON 20 4 9 8}
            {UNSTORE_AT store 1 7 12}
            [scroll_to]
                x,y=7,12
            [/scroll_to]
            [delay]
                time=1000
            [/delay]

            [redraw] [/redraw]
            {CLEAR_VARIABLE store}
            {CLEAR_VARIABLE locs}
        [/else]
    [/if]

    #Victory if Fencers and Duelists killed/escaped
    [if]
        [have_unit]
            side=3
        [/have_unit]
        [else]
            {ELIADOR_ENDLEVEL}
        [/else]
    [/if]
[/event]

#Victory when enemies defeated
[event]
    name=die
    first_time_only=no
    [filter]
        type=Bill Fencer
    [/filter]
    [if]
        [have_unit]
            side=3
        [/have_unit]
        [else]
            [kill]
                x=$x1
                y=$y1
            [/kill]
            {ELIADOR_ENDLEVEL}
        [/else]
    [/if]
    #Show Brella if all fencers dead
    [if]
        [have_unit]
            type=Bill Fencer
        [/have_unit]
        [or]
            [variable]
                name=captive_count
                greater_than=0
            [/variable]
        [/or]
        [else]
            {SHOW_BRELLA}
        [/else]
    [/if]
[/event]

#Defeat when Balthor dies
[event]
    name=die
    [filter]
        description=Balthor
    [/filter]
    {UNIT_MSG (
    x=$x2
    y=$y2) ( _ "What have I done? Zilead's children are dead!")}
    [endlevel]
        result=defeat
    [/endlevel]
[/event]

#Defeat when Brella dies
[event]
    name=die
    [filter]
        description=Brella
    [/filter]
    {UNIT_MSG (
    x=$x2
    y=$y2) ( _ "What have I done? Ardella is dead!")}
    [endlevel]
        result=defeat
    [/endlevel]
[/event]

#Defeat when Ardella dies
[event]
    name=die
    [filter]
        description=Ardella
    [/filter]
    {UNIT_MSG (
    x=$x2
    y=$y2)( _ "What have I done? Ardella is dead!")}
    [endlevel]
        result=defeat
    [/endlevel]
[/event]

{DIE_DEFEAT (description=Anna) (description=Ardella) ( _ "Anna!")}
{DIE_DEFEAT (description=Zeke) (description=Ardella) ( _ "Zeke!")}

[event]
    name=prestart
    {VARIABLE captive_count 0}
    {VARIABLE captive_max 5}
    {VARIABLE captive_exists_0 no}
    {VARIABLE captive_exists_1 no}
    {VARIABLE captive_exists_2 no}
    {VARIABLE captive_exists_3 no}
    {VARIABLE captive_exists_4 no}
[/event]

#If all elves killed or captured, then fencers are taken to Varad
#define CHECK_NO_MORE_ELVES
    [if]
        [not]
            [have_unit]
                side=1
                race=elf
            [/have_unit]
        [/not]
        [variable]
            name=captive_count
            equals=0
        [/variable]
        [then]
            {STORE_UNITS fencer_store (type=Bill Fencer) no}

            #Morgan's galleon goes to bay
            {MOVE_GALLEON 33 22 13 31}

            #Move each Fencer to galleon
            {FOREACH fencer_store i}
            {VARIABLE_OP x to_variable fencer_store[$i].x}
            {VARIABLE_OP y to_variable fencer_store[$i].y}
            [kill]
                x=$x
                y=$y
            [/kill]
            {VARIABLE_OP movex format ($x|,12)}
            {VARIABLE_OP movey format ($y|,31)}
            [move_unit_fake]
                type=Bill Fencer
                x=$movex
                y=$movey
                side=3
            [/move_unit_fake]
            {NEXT i}

            {CLEAR_VARIABLE movex}
            {CLEAR_VARIABLE movey}

            #Morgan's galleon goes to Varad
            {MOVE_GALLEON 13 31 40 40}
            [removeitem]
                x,y=40,40
            [/removeitem]

            #End level if duelists were killed
            [if]
                [have_unit]
                    side=3
                [/have_unit]
                [then]
                    #Show Brella if Duelists still alive
                    {SHOW_BRELLA}
                [/then]
                [else]
                    {ELIADOR_ENDLEVEL}
                [/else]
            [/if]
        [/then]
    [/if]
#enddef

[event]
    name=die
    first_time_only=no
    [filter]
        race=elf
        side=1
    [/filter]
    [kill]
        x=$x1
        y=$y1
    [/kill]
    {CHECK_NO_MORE_ELVES}
[/event]

#define BILL_TAKE X Y
    #Store adjacent locations
    [store_locations]
        variable=locs
        x={X}
        y={Y}
        radius=1
    [/store_locations]

    #Check if deep water is adjacent
    {VARIABLE next_to_water no}
    {FOREACH locs i}
    {VARIABLE_OP x to_variable locs[$i].x}
    {VARIABLE_OP y to_variable locs[$i].y}
    [if]
        [have_location]
            x=$x
            y=$y
            terrain=Wo
        [/have_location]
        [then]
            {VARIABLE next_to_water yes}
            {VARIABLE i 100}
        [/then]
    [/if]
    {NEXT i}

    #If deep water is adjacent
    [if]
        [variable]
            name=next_to_water
            equals=yes
        [/variable]
        [then]
            #Move Bill to deep water
            {MOVE_GALLEON 26 20 $x $y}

            #Kill captive
            [store_unit]
                variable=captive_store
                kill=yes
                [filter]
                    x={X}
                    y={Y}
                [/filter]
            [/store_unit]

            #Reset values at captive_index
            {VARIABLE_OP captive_count add -1}
            {VARIABLE captive_index $captive_store.variables.captive_index}
            {VARIABLE_OP var format captive_exists_$captive_index}
            {VARIABLE $var no}

            #Move Bill's galleon to isle
            {MOVE_GALLEON $x $y 26 20}

            #Unstore elf and cage her on isle
            {VARIABLE_OP var format captive_store_$captive_index|.side}
            {VARIABLE $var 4}
            {VARIABLE_OP var format captive_store_$captive_index|.x}
            {VARIABLE $var 31}
            {VARIABLE_OP var format captive_store_$captive_index|.y}
            {VARIABLE $var 19}
            {VARIABLE_OP var format captive_store_$captive_index|.overlays}
            {VARIABLE $var items/cage.png}
            {VARIABLE_OP var format captive_store_$captive_index}
            [unstore_unit]
                variable=$var
                find_vacant=yes
            [/unstore_unit]

            #Take fencers to top of map
            {MOVE_GALLEON 26 20 11 9}

            #Unstore Fencers
            {VARIABLE_OP var format captor_store_$captive_index|_0.x}
            {VARIABLE $var 8}
            {VARIABLE_OP var format captor_store_$captive_index|_0.y}
            {VARIABLE $var 11}
            {VARIABLE_OP var format captor_store_$captive_index|_0}
            [unstore_unit]
                variable=$var
                find_vacant=yes
            [/unstore_unit]

            {VARIABLE_OP var format captor_store_$captive_index|_1.x}
            {VARIABLE $var 8}
            {VARIABLE_OP var format captor_store_$captive_index|_1.y}
            {VARIABLE $var 11}
            {VARIABLE_OP var format captor_store_$captive_index|_1}
            [unstore_unit]
                variable=$var
                find_vacant=yes
            [/unstore_unit]

            {VARIABLE_OP var format captor_store_$captive_index|_2.x}
            {VARIABLE $var 8}
            {VARIABLE_OP var format captor_store_$captive_index|_2.y}
            {VARIABLE $var 11}
            {VARIABLE_OP var format captor_store_$captive_index|_2}
            [unstore_unit]
                variable=$var
                find_vacant=yes
            [/unstore_unit]

            #Bill goes back to isle
            {MOVE_GALLEON 11 9 26 20}

            {CHECK_NO_MORE_ELVES}
        [/then]
    [/if]
#enddef

#define CAPTIVE_EVENTS TYPE
    [event]
        name=moveto
        first_time_only=no
        [filter]
            type={TYPE}
        [/filter]
        {BILL_TAKE $x1 $y1}
    [/event]

    #Unstore captive and captors if killed
    [event]
        name=die
        first_time_only=no
        [filter]
            type={TYPE}
        [/filter]

        {STORE_UNITS captive_store (
        x=$x1
        y=$y1) yes}

        #Reset values at captive_index
        {VARIABLE_OP captive_count add -1}
        {VARIABLE captive_index $captive_store.variables.captive_index}
        {VARIABLE_OP var format captive_exists_$captive_index}
        {VARIABLE $var no}

        #Unstore elf and 3 fencers
        {VARIABLE_OP var format captive_store_$captive_index|.x}
        {VARIABLE $var $x1}
        {VARIABLE_OP var format captive_store_$captive_index|.y}
        {VARIABLE $var $y1}
        {VARIABLE_OP var format captive_store_$captive_index}
        [unstore_unit]
            variable=$var
            find_vacant=yes
        [/unstore_unit]

        {VARIABLE_OP var format captor_store_$captive_index|_0.x}
        {VARIABLE $var $x1}
        {VARIABLE_OP var format captor_store_$captive_index|_0.y}
        {VARIABLE $var $y1}
        {VARIABLE_OP var format captor_store_$captive_index|_0}
        [unstore_unit]
            variable=$var
            find_vacant=yes
        [/unstore_unit]

        {VARIABLE_OP var format captor_store_$captive_index|_1.x}
        {VARIABLE $var $x1}
        {VARIABLE_OP var format captor_store_$captive_index|_1.y}
        {VARIABLE $var $y1}
        {VARIABLE_OP var format captor_store_$captive_index|_1}
        [unstore_unit]
            variable=$var
            find_vacant=yes
        [/unstore_unit]

        {VARIABLE_OP var format captor_store_$captive_index|_2.x}
        {VARIABLE $var $x1}
        {VARIABLE_OP var format captor_store_$captive_index|_2.y}
        {VARIABLE $var $y1}
        {VARIABLE_OP var format captor_store_$captive_index|_2}
        [unstore_unit]
            variable=$var
            find_vacant=yes
        [/unstore_unit]
    [/event]
#enddef

{CAPTIVE_EVENTS (Captured Elvish Archer)}
{CAPTIVE_EVENTS (Captured Elvish Avenger)}
{CAPTIVE_EVENTS (Captured Elvish Marksman)}
{CAPTIVE_EVENTS (Captured Elvish Ranger)}
{CAPTIVE_EVENTS (Captured Elvish Sharpshooter)}

#define CAPTURE_ELF X Y
    #If Elf at X,Y
    [if]
        [variable]
            name=captive_count
            less_than=$captive_max
        [/variable]
        [have_unit]
            side=1
            x={X}
            y={Y}
            race=elf
        [/have_unit]
        [then]
            #Store all fencers surrounding elf
            [store_unit]
                variable=captor_store
                [filter]
                    type=Bill Fencer
                    [filter_adjacent]
                        x={X}
                        y={Y}
                    [/filter_adjacent]
                [/filter]
            [/store_unit]

            #If at least 3 fencers surround elf
            [if]
                [variable]
                    name=captor_store.length
                    greater_than=2
                [/variable]
                [then]
                    #Increment number of captives (max 3)
                    {VARIABLE_OP captive_count add 1}

                    #Find an index to store units
                    {VARIABLE captive_index -1}
                    {VARIABLE i 0}
                    [while]
                        [variable]
                            name=i
                            less_than=$captive_max
                        [/variable]
                        [variable]
                            name=captive_index
                            equals=-1
                        [/variable]
                        [do]
                            #If no unit captured at i, then i is the index
                            {VARIABLE_OP have_captive to_variable captive_exists_$i}
                            [if]
                                [variable]
                                    name=have_captive
                                    equals=no
                                [/variable]
                                [then]
                                    {VARIABLE captive_index $i}
                                [/then]
                            [/if]
                            {VARIABLE_OP i add 1}
                        [/do]
                    [/while]

                    #Error if no captive_index found
                    [if]
                        [variable]
                            name=captive_index
                            equals=-1
                        [/variable]
                        [then]
                            {DEBUG_MSG "Error: captive_index"}
                            [endlevel]
                                result=defeat
                            [/endlevel]
                        [/then]
                    [/if]

                    #Set captive_exists to yes
                    {VARIABLE_OP var format captive_exists_$captive_index}
                    {VARIABLE $var yes}

                    #Scroll to elf
                    [scroll_to_unit]
                        x={X}
                        y={Y}
                    [/scroll_to_unit]
                    [delay]
                        time=1000
                    [/delay]

                    {CLEAR_VARIABLE have_captive}
                    {CLEAR_VARIABLE i}
                    #Store elf
                    {VARIABLE_OP var format captive_store_$captive_index}
                    [store_unit]
                        variable=$var
                        kill=yes
                        [filter]
                            x={X}
                            y={Y}
                        [/filter]
                    [/store_unit]

                    #Store 3 fencers
                    {VARIABLE_OP var format captor_store_$captive_index|_0}
                    [store_unit]
                        variable=$var
                        kill=yes
                        [filter]
                            x=$captor_store[0].x
                            y=$captor_store[0].y
                        [/filter]
                    [/store_unit]
                    {VARIABLE_OP var format captor_store_$captive_index|_1}
                    [store_unit]
                        variable=$var
                        kill=yes
                        [filter]
                            x=$captor_store[1].x
                            y=$captor_store[1].y
                        [/filter]
                    [/store_unit]
                    {VARIABLE_OP var format captor_store_$captive_index|_2}
                    [store_unit]
                        variable=$var
                        kill=yes
                        [filter]
                            x=$captor_store[2].x
                            y=$captor_store[2].y
                        [/filter]
                    [/store_unit]

                    #Elf gets taken NE toward deep water
                    {VARIABLE goto_y ({Y})}
                    [if]
                        [variable]
                            name=goto_y
                            greater_than=10
                        [/variable]
                        [then]
                            #Pull up 5 hexes (unless close to top)
                            {VARIABLE_OP goto_y add -5}
                        [/then]
                    [/if]
                    [store_locations]
                        variable=water_locs
                        x=1-24
                        y=$goto_y
                        terrain=Wo
                    [/store_locations]
                    {VARIABLE goto_x $water_locs[0].x}
                    {VARIABLE_OP goto_x add -1}
                    {CLEAR_VARIABLE water_locs}
                    #Replace elf with captured elf
                    {VARIABLE_OP type to_variable (captive_store_$captive_index|.type)}
                    {VARIABLE_OP type format (Captured $type)}
                    [unit]
                        type=$type
                        description=$type
                        x={X}
                        y={Y}
                        goto_x=$goto_x
                        goto_y=$goto_y
                        side=3
                        [variables]
                            captive_index=$captive_index
                        [/variables]
                    [/unit]

                    [redraw] [/redraw]
                    [delay]
                        time=1000
                    [/delay]

                    {CLEAR_VARIABLE captive_index}
                    {CLEAR_VARIABLE type}

                    #Bill takes prisoner if already adjacent to deep water
                    {BILL_TAKE ({X}) ({Y})}
                [/then]
            [/if]
            {CLEAR_VARIABLE captor_store}
        [/then]
    [/if]
#enddef

#define CHECK_ELVES
    [if]
        [variable]
            name=captive_count
            less_than=$captive_max
        [/variable]
        [then]
            #Store every elf that hasn't been captured
            [store_unit]
                variable=ELF_STORE
                kill=no
                [filter]
                    side=1
                    race=elf
                [/filter]
            [/store_unit]
            {FOREACH ELF_STORE I}
            {VARIABLE_OP X to_variable ELF_STORE[$I].x}
            {VARIABLE_OP Y to_variable ELF_STORE[$I].y}
            {CAPTURE_ELF $X $Y}
            #Exit loop if 3 elves have been captured
            [if]
                [variable]
                    name=captive_count
                    equals=$captive_max
                [/variable]
                [then]
                    {VARIABLE I 1000}
                [/then]
            [/if]
            {NEXT I}
            {CLEAR_VARIABLE ELF_STORE}
            {CLEAR_VARIABLE I}
            {CLEAR_VARIABLE X}
            {CLEAR_VARIABLE Y}
        [/then]
    [/if]
#enddef

#Capture up to 3 elves
[event]
    name=new turn
    first_time_only=no

    #Prisoners switch back to your team so you can't attack them
    {MODIFY_UNIT (side=4) side 5}

    {CHECK_ELVES}
[/event]

[event]
    name=ai turn
    first_time_only=no
    [if]
        [variable]
            name=side_number
            equals=3
        [/variable]
        [then]
            #Capture any surrounded elves
            {CHECK_ELVES}

            #Captured units can't attack
            {MODIFY_UNIT (type=Captured Elvish Archer) attacks_left 0}
            {MODIFY_UNIT (type=Captured Elvish Avenger) attacks_left 0}
            {MODIFY_UNIT (type=Captured Elvish Marksman) attacks_left 0}
            {MODIFY_UNIT (type=Captured Elvish Ranger) attacks_left 0}
            {MODIFY_UNIT (type=Captured Elvish Sharpshooter) attacks_left 0}

            #Prsioners switch to enemie's side so they can't be attacked
            {MODIFY_UNIT (side=5) side 4}

            #Store every elf that hasn't been captured
            [store_unit]
                variable=store
                kill=no
                [filter]
                    side=1
                    race=elf
                [/filter]
            [/store_unit]

            #Find highest elf
            {VARIABLE high_x 0}
            {VARIABLE high_y 100}
            {FOREACH store i}
            {VARIABLE_OP x to_variable store[$i].x}
            {VARIABLE_OP y to_variable store[$i].y}

            #If elf is highest and it hasn't just been captured
            [if]
                [variable]
                    name=y
                    less_than=$high_y
                [/variable]
                [then]
                    {VARIABLE high_x $x}
                    {VARIABLE high_y $y}
                [/then]
            [/if]
            {NEXT i}

            #Store Fencers
            [store_unit]
                variable=store
                [filter]
                    type=Bill Fencer
                [/filter]
            [/store_unit]

            #Fencers go to highest elf
            {FOREACH store i}
            {VARIABLE store[$i].goto_x $high_x}
            {VARIABLE store[$i].goto_y $high_y}
            [unstore_unit]
                variable=store[$i]
                find_vacant=no
            [/unstore_unit]
            {NEXT i}

            {CLEAR_VARIABLE store}
            {CLEAR_VARIABLE high_x}
            {CLEAR_VARIABLE high_y}
        [/then]
    [/if]
[/event]

[event]
    name=victory

    #Remove cage overlay from elves
    [store_unit]
        variable=store
        kill=no
        [filter]
            race=elf
            [not]
                side=1
            [/not]
        [/filter]
    [/store_unit]
    {FOREACH store i}
    {VARIABLE_OP x to_variable store[$i].x}
    {VARIABLE_OP y to_variable store[$i].y}
    [remove_unit_overlay]
        x=$x
        y=$y
        image=items/cage.png
    [/remove_unit_overlay]
    {NEXT i}
    {CLEAR_VARIABLE store}

    #Bill takes elf prisoners to Varad
    {STORE_UNITS elf_prisoner_store (
    [not]
        side=1
    [/not]
    race=elf) yes}
    {MOVE_GALLEON 26 20 40 40}
    [removeitem]
        x,y=40,40
    [/removeitem]

    {STORE_UNITS ardella_store (description=Ardella) no}
    {STORE_UNITS anna_store (description=Anna) no}
    {STORE_UNITS zeke_store (description=Zeke) no}
    {STORE_UNITS anwar_store (side=2) no}
    {STORE_UNITS glorienda_store (
    side=1
    race=elf) no}
    {STORE_UNITS balas_store (
    side=1
    [not]
        description=Ardella
    [/not]
    [not]
        description=Anna
    [/not]
    [not]
        description=Zeke
    [/not]
    [not]
        race=elf
    [/not]) no}

    {CLEAR_VARIABLE x}
    {CLEAR_VARIABLE y}
    {CLEAR_VARIABLE locs}
    {CLEAR_VARIABLE captor_store_0_0}
    {CLEAR_VARIABLE captor_store_0_1}
    {CLEAR_VARIABLE captor_store_0_2}
    {CLEAR_VARIABLE captor_store_1_0}
    {CLEAR_VARIABLE captor_store_1_1}
    {CLEAR_VARIABLE captor_store_1_2}
    {CLEAR_VARIABLE captor_store_2_0}
    {CLEAR_VARIABLE captor_store_2_1}
    {CLEAR_VARIABLE captor_store_2_2}
    {CLEAR_VARIABLE captor_store_3_0}
    {CLEAR_VARIABLE captor_store_3_1}
    {CLEAR_VARIABLE captor_store_3_2}
    {CLEAR_VARIABLE captor_store_4_0}
    {CLEAR_VARIABLE captor_store_4_1}
    {CLEAR_VARIABLE captor_store_4_2}
    {CLEAR_VARIABLE captive_store_0}
    {CLEAR_VARIABLE captive_store_1}
    {CLEAR_VARIABLE captive_store_2}
    {CLEAR_VARIABLE captive_store_3}
    {CLEAR_VARIABLE captive_store_4}
[/event]

{ELIADOR_MONSTERS}
